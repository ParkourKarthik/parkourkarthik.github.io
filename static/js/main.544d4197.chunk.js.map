{"version":3,"sources":["Components/TiltComponent.js","Components/Project.js","Constants.js","Components/SocialConnect.js","Components/CustomCursor.js","App.js","serviceWorker.js","index.js"],"names":["TiltComponent","Comp","props","ref","useRef","handleMove","e","xVal","layerX","yVal","layerY","height","current","clientHeight","width","clientWidth","yRotation","transString","style","transform","useEffect","el","classList","add","addEventListener","forwardedRef","Project","project","target","rel","href","url","className","mobile","name","techs","src","imageUrl","alt","projects","socialConnects","link","icon","SocialConnect","id","CustomCursor","group","clientX","clientY","innerCursor","document","querySelector","lastX","lastY","isHover","requestAnimationFrame","render","initCursor","canvas","shapeBounds","paper","setup","polygon","Path","RegularPolygon","Point","strokeColor","strokeWidth","smooth","Group","applyMatrix","bigCoordinates","lerp","a","b","n","view","onFrame","event","position","bounds","scale","length","segments","forEach","segment","i","point","x","y","initCanvas","handleMouseEnter","handleMouseLeave","querySelectorAll","item","initHovers","class","resize","App","Projects","map","TiltedProject","key","SocialConnects","TiltedWelcomeNote","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oRAwCeA,MAtCf,SAAuBC,GAmCrB,OAlCa,SAAAC,GACX,IAAMC,EAAMC,iBAAO,MACbC,EAAa,SAAAC,GACjB,IAAMC,EAAOD,EAAEE,OACTC,EAAOH,EAAEI,OACTC,EAASR,EAAIS,QAAQC,aACrBC,EAAQX,EAAIS,QAAQG,YAEpBC,GAAoBT,EAAOO,EAAQ,GAAKA,GAA3B,GAEbG,EAAW,iDAHQR,EAAOE,EAAS,GAAKA,EAA5B,GAGD,wBAAqEK,EAArE,QACjBb,EAAIS,QAAQM,MAAMC,UAAYF,GAqBhC,OAlBAG,qBAAU,WACR,IAAMC,EAAKlB,EAAIS,QACfT,EAAIS,QAAQU,UAAUC,IAAI,aAE1BF,EAAGG,iBAAiB,YAAanB,GACjCgB,EAAGG,iBAAiB,YAAY,WAC9BH,EAAGH,MAAMC,UACP,uDAEJE,EAAGG,iBAAiB,aAAa,WAC/BH,EAAGH,MAAMC,UACP,yDAEJE,EAAGG,iBAAiB,WAAW,WAC7BH,EAAGH,MAAMC,UACP,2DAEH,IACI,kBAAClB,EAAD,iBAAUC,EAAV,CAAiBuB,aAActB,OCT3BuB,EAxBC,SAAAxB,GAAU,IAChBuB,EAA0BvB,EAA1BuB,aAAcE,EAAYzB,EAAZyB,QACtB,OACE,uBACExB,IAAKsB,EACLG,OAAO,SACPC,IAAI,sBACJC,KAAMH,EAAQI,IACdC,UAAS,uBAAkBL,EAAQM,QAAU,WAM7C,yBAAKD,UAAU,iBACb,6BAAML,EAAQO,MACd,yBAAKF,UAAU,sBACf,yBAAKA,UAAU,kBAAkBL,EAAQQ,QAE3C,yBAAKC,IAAKT,EAAQU,SAAUC,IAAKX,EAAQO,SCrBzCK,EAAW,CACf,CACEL,KAAM,kBACNH,IAAK,mDACLI,MAAO,2BACPE,SACE,uGAEJ,CACEH,KAAM,mBACNH,IAAK,oDACLE,QAAQ,EACRE,MAAO,+BACPE,SACE,uGAEJ,CACEH,KAAM,kBACNH,IAAK,mDACLE,QAAQ,EACRE,MAAO,SACPE,SACE,uGAEJ,CACEH,KAAM,YACNH,IAAK,8CACLI,MAAO,gBACPE,SACE,wGAIAG,EAAiB,CACrB,CACEN,KAAM,SACNO,KAAM,oCACNC,KAAM,aAER,CACER,KAAM,UACNO,KAAM,qCACNC,KAAM,cAER,CACER,KAAM,WACNO,KAAM,8DACNC,KAAM,eAER,CACER,KAAM,gBACNO,KAAM,yDACNC,KAAM,sBClCKC,EAhBO,SAAAzC,GACpB,OACE,6BACE,uBACE0C,GAAI1C,EAAM0C,GACVd,KAAM5B,EAAMuC,KACZb,OAAO,SACPC,IAAI,sBACJG,UAAU,uBAEV,uBAAGA,UAAS,cAAS9B,EAAMwC,QAP7B,IAO2CxC,EAAMgC,Q,gBC8GxCW,EAvHM,WA+GnB,OA9GAzB,qBAAU,WACR,IAOI0B,EAPAC,GAAW,IACXC,GAAW,IACTC,EAAcC,SAASC,cAAc,eAEvCC,EAAQ,EACRC,EAAQ,EACRC,GAAU,GAGK,WAEjBJ,SAAS1B,iBAAiB,aAAa,SAAAlB,GACrCyC,EAAUzC,EAAEyC,QACZC,EAAU1C,EAAE0C,WAUdO,uBALe,SAATC,IACJP,EAAY/B,MAAMC,UAAlB,oBAA2C4B,EAA3C,eAAyDC,EAAzD,OAEAO,sBAAsBC,MAmF1BC,GA9EmB,WACjB,IAAMC,EAASR,SAASC,cAAc,kBAChCQ,EACG,GAGTC,IAAMC,MAAMH,GACZ,IAMMI,EAAU,IAAIF,IAAMG,KAAKC,eAC7B,IAAIJ,IAAMK,MAAM,EAAG,GALJ,EACF,IAQfH,EAAQI,YAXY,0BAYpBJ,EAAQK,YAXY,IAYpBL,EAAQM,UACRtB,EAAQ,IAAIc,IAAMS,MAAM,CAACP,KACnBQ,aAAc,EAEpB,IAAIC,EAAiB,GAGfC,EAAO,SAACC,EAAGC,EAAGC,GAClB,OAAQ,EAAIA,GAAKF,EAAIE,EAAID,GAK3Bd,IAAMgB,KAAKC,QAAU,SAAAC,GACnB1B,EAAQoB,EAAKpB,EAAOL,EAAS,IAC7BM,EAAQmB,EAAKnB,EAAOL,EAAS,IAC7BF,EAAMiC,SAAW,IAAInB,IAAMK,MAAMb,EAAOC,GAEpCC,GAAWQ,EAAQkB,OAAOlE,MAAQ6C,EACpCG,EAAQmB,MAAM,OACJ3B,GAAWQ,EAAQkB,OAAOlE,MAAQ,IAC5CgD,EAAQmB,MAAM,KAIZ3B,GAAWQ,EAAQkB,OAAOlE,OAAS6C,GAEP,IAA1BY,EAAeW,QACjBpB,EAAQqB,SAASC,SAAQ,SAACC,EAASC,GACjCf,EAAee,GAAK,CAACD,EAAQE,MAAMC,EAAGH,EAAQE,MAAME,MAI1D3B,EAAQM,UA0BZsB,GAtBmB,WAGjB,IAAMC,EAAmB,SAAArF,GACvBgD,GAAU,GAINsC,EAAmB,WACvBtC,GAAU,GAIMJ,SAAS2C,iBAAiB,KAClCT,SAAQ,SAAAU,GAChBA,EAAKtE,iBAAiB,aAAcmE,GACpCG,EAAKtE,iBAAiB,aAAcoE,GACpCE,EAAKtE,iBAAiB,YAAaoE,GACnCE,EAAKtE,iBAAiB,UAAWmE,MAKrCI,KACC,IAGD,6BACE,yBAAKC,MAAM,sBACX,4BAAQA,MAAM,uBAAuBC,QAAM,MC5ClCC,MAjEf,WACE,IAAMC,EAAW,WACf,OAAO5D,EAAS6D,KAAI,SAACZ,EAAGF,GAAJ,OAAU,kBAACe,EAAD,CAAe1E,QAAS6D,EAAGc,IAAKhB,QAG1DiB,EAAiB,WACrB,OAAO/D,EAAe4D,KAAI,SAACZ,EAAGF,GAAJ,OAAU,kBAAC,EAAD,iBAAmBE,EAAnB,CAAsBc,IAAKhB,SAiB3DkB,EAAoBxG,GAdN,SAAAE,GAAU,IACpBuB,EAAiBvB,EAAjBuB,aACR,OACE,yBAAKtB,IAAKsB,EAAcmB,GAAG,gBACzB,iDACA,0DACA,uBAAGZ,UAAU,YAAb,wGASAqE,EAAgBrG,EAAc0B,GAEpC,OACE,yBAAKM,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKY,GAAG,UACN,4BACE,4BACE,uBAAGd,KAAK,oBAAR,UAEF,4BACE,uBAAGA,KAAK,aAAR,aAEF,4BACE,uBAAGA,KAAK,YAAR,cAKN,6BAASc,GAAG,kBAAkBZ,UAAU,mBACtC,kBAACwE,EAAD,OAEF,6BAAS5D,GAAG,YACV,qEACA,yBAAKZ,UAAU,iBACb,kBAACmE,EAAD,QAGJ,6BAASvD,GAAG,WACV,4CACA,yBAAKZ,UAAU,sBACb,kBAACuE,EAAD,QAGJ,kDACmB,uBAAGvE,UAAU,iBADhC,kBCtDcyE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAStD,OACP,kBAAC,IAAMuD,WAAP,KACE,kBAAC,EAAD,OAEF7D,SAAS8D,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.544d4197.chunk.js","sourcesContent":["import React , {useRef, useEffect} from 'react';\n\nfunction TiltComponent(Comp) {\n  const Tilt = props => {\n    const ref = useRef(null);\n    const handleMove = e => {\n      const xVal = e.layerX;\n      const yVal = e.layerY;\n      const height = ref.current.clientHeight;\n      const width = ref.current.clientWidth;\n      const xRotation = 20 * ((yVal - height / 2) / height);\n      const yRotation = -20 * ((xVal - width / 2) / width);\n\n      const transString = `perspective(800px) scale(1.1) rotateX(${xRotation}deg) rotateY(${yRotation}deg)`;\n      ref.current.style.transform = transString;\n    };\n\n    useEffect(() => {\n      const el = ref.current;\n      ref.current.classList.add('boxShadow');\n      /* Get the height and width of the element */\n      el.addEventListener('mousemove', handleMove);\n      el.addEventListener('mouseout', () => {\n        el.style.transform =\n          'perspective(500px) scale(1) rotateX(0) rotateY(0)';\n      });\n      el.addEventListener('mousedown', () => {\n        el.style.transform =\n          'perspective(500px) scale(0.9) rotateX(0) rotateY(0)';\n      });\n      el.addEventListener('mouseup', () => {\n        el.style.transform =\n          'perspective(500px) scale(1.1) rotateX(0) rotateY(0)';\n      });\n    }, []);\n    return <Comp {...props} forwardedRef={ref} />;\n  };\n  return Tilt;\n}\n\nexport default TiltComponent;\n","import React from 'react';\n\nconst Project = props => {\n  const { forwardedRef, project } = props;\n  return (\n    <a\n      ref={forwardedRef}\n      target='_blank'\n      rel='noopener noreferrer'\n      href={project.url}\n      className={`project-tile ${project.mobile && 'mobile'}`}\n      // style={{\n      //   backgroundImage: `url(${project.imageUrl})`,\n      //   backgroundSize: '100%'\n      // }}\n    >\n      <div className='project-title'>\n        <div>{project.name}</div>\n        <div className='project-seperator'></div>\n        <div className='project-skills'>{project.techs}</div>\n      </div>\n      <img src={project.imageUrl} alt={project.name} />\n    </a>\n  );\n};\n\nexport default Project;","const projects = [\n  {\n    name: 'EMPLOYEE REVIEW',\n    url: 'https://github.com/ParkourKarthik/EmployeeReview',\n    techs: 'Reactjs, nodejs, Mongodb',\n    imageUrl:\n      'https://user-images.githubusercontent.com/9585305/86875085-54caed00-c0ff-11ea-9045-2a092a28441c.png'\n  },\n  {\n    name: 'SIMPLE SCHEDULER',\n    url: 'https://github.com/ParkourKarthik/simplescheduler',\n    mobile: true,\n    techs: 'ReactNative, nodejs, Mongodb',\n    imageUrl:\n      'https://user-images.githubusercontent.com/9585305/97676350-87d22b80-1ab6-11eb-8baa-5560d336f913.jpg'\n  },\n  {\n    name: 'COLOR CONFUSION',\n    url: 'https://github.com/ParkourKarthik/ColorConfusion',\n    mobile: true,\n    techs: 'Kotlin',\n    imageUrl:\n      'https://user-images.githubusercontent.com/9585305/97676511-c7007c80-1ab6-11eb-9754-828f5a2cf07f.jpg'\n  },\n  {\n    name: 'SHIP GAME',\n    url: 'https://github.com/ParkourKarthik/ship-game',\n    techs: 'HTML, JS, CSS',\n    imageUrl:\n      'https://user-images.githubusercontent.com/9585305/86877760-1cc6a880-c105-11ea-8dcb-29e1d7bb9e65.png'\n  }\n];\n\nconst socialConnects = [\n  {\n    name: \"GitHub\",\n    link: \"https://github.com/parkourkarthik\",\n    icon: \"fa-github\"\n  },\n  {\n    name: \"Twitter\",\n    link: \"https://twitter.com/Parkourkarthik\",\n    icon: \"fa-twitter\"\n  },\n  {\n    name: \"LinkedIn\",\n    link: \"https://www.linkedin.com/in/karthikayan-pazhanivel-501a0051\",\n    icon: \"fa-linkedin\"\n  },\n  {\n    name: \"StackOverflow\",\n    link: \"https://stackoverflow.com/users/3098008/parkourkarthik\",\n    icon: \"fa-stack-overflow\"\n  }\n];\n\nexport {projects, socialConnects};\n","import React from 'react';\n\nconst SocialConnect = props => {\n  return (\n    <div>\n      <a\n        id={props.id}\n        href={props.link}\n        target='_blank'\n        rel='noopener noreferrer'\n        className='btn contact-details'\n      >\n        <i className={`fab ${props.icon}`}></i> {props.name}\n      </a>\n    </div>\n  );\n};\n\nexport default SocialConnect;\n","import React, { useEffect } from 'react';\nimport paper from 'paper';\n\nconst CustomCursor = () => {\n  useEffect(() => {\n    let clientX = -100;\n    let clientY = -100;\n    const innerCursor = document.querySelector('.cursor-dot');\n\n    let lastX = 0;\n    let lastY = 0;\n    let isHover = false;\n    let group;\n\n    const initCursor = () => {\n      // add listener to track the current mouse position\n      document.addEventListener('mousemove', e => {\n        clientX = e.clientX;\n        clientY = e.clientY;\n      });\n\n      // transform the innerCursor to the current mouse position\n      // use requestAnimationFrame() for smooth performance\n      const render = () => {\n        innerCursor.style.transform = `translate(${clientX}px, ${clientY}px)`;\n\n        requestAnimationFrame(render);\n      };\n      requestAnimationFrame(render);\n    };\n\n    const initCanvas = () => {\n      const canvas = document.querySelector('.cursor-canvas');\n      const shapeBounds = {\n        width: 55,\n        height: 55\n      };\n      paper.setup(canvas);\n      const strokeColor = 'rgba(211, 12, 184, 0.5)';\n      const strokeWidth = 1.5;\n      const segments = 8;\n      const radius = 15;\n\n      // the base shape for the noisy circle\n      const polygon = new paper.Path.RegularPolygon(\n        new paper.Point(0, 0),\n        segments,\n        radius\n      );\n      polygon.strokeColor = strokeColor;\n      polygon.strokeWidth = strokeWidth;\n      polygon.smooth();\n      group = new paper.Group([polygon]);\n      group.applyMatrix = false;\n\n      let bigCoordinates = [];\n\n      // function for linear interpolation of values\n      const lerp = (a, b, n) => {\n        return (1 - n) * a + n * b;\n      };\n\n      // the draw loop of Paper.js\n      // (60fps with requestAnimationFrame under the hood)\n      paper.view.onFrame = event => {\n        lastX = lerp(lastX, clientX, 0.2);\n        lastY = lerp(lastY, clientY, 0.2);\n        group.position = new paper.Point(lastX, lastY);\n\n        if (isHover && polygon.bounds.width < shapeBounds.width) {\n          polygon.scale(1.04);\n        } else if (!isHover && polygon.bounds.width > 30) {\n          polygon.scale(0.92);\n        }\n\n        // while stuck and big, apply simplex noise\n        if (isHover && polygon.bounds.width >= shapeBounds.width) {\n          // first get coordinates of large circle\n          if (bigCoordinates.length === 0) {\n            polygon.segments.forEach((segment, i) => {\n              bigCoordinates[i] = [segment.point.x, segment.point.y];\n            });\n          }\n        }\n        polygon.smooth();\n      };\n    };\n\n    const initHovers = () => {\n      // find the center of the link element and set stuckX and stuckY\n      // these are needed to set the position of the noisy circle\n      const handleMouseEnter = e => {\n        isHover = true;\n      };\n\n      // reset isStuck on mouseLeave\n      const handleMouseLeave = () => {\n        isHover = false;\n      };\n\n      // add event listeners to all items\n      const linkItems = document.querySelectorAll('a');\n      linkItems.forEach(item => {\n        item.addEventListener('mouseenter', handleMouseEnter);\n        item.addEventListener('mouseleave', handleMouseLeave);\n        item.addEventListener('mousedown', handleMouseLeave);\n        item.addEventListener('mouseup', handleMouseEnter);\n      });\n    };\n    initCursor();\n    initCanvas();\n    initHovers();\n  }, []);\n\n  return (\n    <div>\n      <div class='cursor cursor-dot'></div>\n      <canvas class='cursor cursor-canvas' resize></canvas>\n    </div>\n  );\n};\n\nexport default CustomCursor;\n","import React from 'react';\nimport './App.css';\nimport TiltComponent from './Components/TiltComponent';\nimport Project from './Components/Project';\nimport { projects, socialConnects } from './Constants';\nimport SocialConnect from './Components/SocialConnect';\nimport CustomCursor from \"./Components/CustomCursor\";\n\nfunction App() {\n  const Projects = () => {\n    return projects.map((x, i) => <TiltedProject project={x} key={i} />);\n  };\n\n  const SocialConnects = () => {\n    return socialConnects.map((x, i) => <SocialConnect {...x} key={i} />);\n  };\n\n  const WelcomeNote = props => {\n    const { forwardedRef } = props;\n    return (\n      <div ref={forwardedRef} id='welcome-note'>\n        <h1>Hey I am Karthik,</h1>\n        <p>a full stack web developer.</p>\n        <p className='sub-text'>\n          An enthusiastic developer who loves solving problems, sticking to a\n          never ending learning curve.\n        </p>\n      </div>\n    );\n  };\n\n  const TiltedWelcomeNote = TiltComponent(WelcomeNote);\n  const TiltedProject = TiltComponent(Project);\n\n  return (\n    <div className='App'>\n      <CustomCursor />\n      <nav id='navbar'>\n        <ul>\n          <li>\n            <a href='#welcome-section'>About</a>\n          </li>\n          <li>\n            <a href='#projects'>Projects</a>\n          </li>\n          <li>\n            <a href='#contact'>Contact</a>\n          </li>\n        </ul>\n      </nav>\n\n      <section id='welcome-section' className='welcome-section'>\n        <TiltedWelcomeNote />\n      </section>\n      <section id='projects'>\n        <h2>Here are some of my Personal Projects</h2>\n        <div className='projects-grid'>\n          <Projects />\n        </div>\n      </section>\n      <section id='contact'>\n        <h2>Find me on..</h2>\n        <div className='contacts-container'>\n          <SocialConnects />\n        </div>\n      </section>\n      <footer>\n        &copy; Made with <i className='fab fa-react'></i> by Karthik.\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}